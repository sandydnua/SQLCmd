<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-3.2.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
                           http://www.springframework.org/schema/data/jpa
                           http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

    <context:annotation-config/>
    <context:component-scan base-package="sandy.sqlcmd"/>
    <!--доп для spring data-->
    <jpa:repositories base-package="sandy.sqlcmd.model"
                      entity-manager-factory-ref="emf"/>

    <bean id="emf"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="packagesToScan" value="sandy.sqlcmd.model.entity"/>
        <property name="dataSource" ref="dataSourceServiceHelp"/>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.hbm2ddl.auto">validate</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
            </props>
        </property>
        <property name="persistenceProvider">
            <bean class="org.hibernate.jpa.HibernatePersistenceProvider"></bean>
        </property>

    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="dataSource" ref="dataSourceServiceHelp"/>
    </bean>

    <bean id="templateHelpDao" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg ref="dataSourceServiceHelp"/>
    </bean>

    <bean id="dataSourceServiceHelp" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="org.postgresql.Driver"/>
        <property name="url" value="jdbc:postgresql://localhost:5432/service?loggerLevel=OF"/>
        <property name="username" value="postgres"/>
        <property name="password" value="7561"/>
    </bean>

    <!--//////////////////-->

    <bean id="commandFactorySpring" class="sandy.sqlcmd.controller.web.CommandsFactorySpring">
        <property name="commandFactoryBean" ref="commandFactory"/>
    </bean>

    <bean id="commandClear" class="sandy.sqlcmd.controller.command.CommandClear" scope="prototype"/>
    <bean id="commandConnect" class="sandy.sqlcmd.controller.command.CommandConnect" scope="prototype"/>
    <bean id="commandCreate" class="sandy.sqlcmd.controller.command.CommandCreate" scope="prototype"/>
    <bean id="commandDelete" class="sandy.sqlcmd.controller.command.CommandDelete" scope="prototype"/>
    <bean id="commandDisconnect" class="sandy.sqlcmd.controller.command.CommandDisconnect" scope="prototype"/>
    <bean id="commandDrop" class="sandy.sqlcmd.controller.command.CommandDrop" scope="prototype"/>
    <bean id="commandExit" class="sandy.sqlcmd.controller.command.CommandExit" scope="prototype"/>
    <bean id="commandFind" class="sandy.sqlcmd.controller.command.CommandFind" scope="prototype"/>
    <bean id="commandHelp" class="sandy.sqlcmd.controller.command.CommandHelp" scope="prototype"/>
    <bean id="commandInsert" class="sandy.sqlcmd.controller.command.CommandInsert" scope="prototype"/>
    <bean id="commandTables" class="sandy.sqlcmd.controller.command.CommandTables" scope="prototype"/>
    <bean id="commandUpdate" class="sandy.sqlcmd.controller.command.CommandUpdate" scope="prototype"/>
    <bean id="commandUnknown" class="sandy.sqlcmd.controller.command.UnknownCommand" scope="prototype"/>


    <bean id="commandFactory" class="org.springframework.beans.factory.config.ServiceLocatorFactoryBean">
        <property name="serviceLocatorInterface" value="sandy.sqlcmd.controller.web.CommandFactory" />
        <property name="serviceMappings">
            <props>
                <prop key="connect">commandConnect</prop>
                <prop key="clear">commandClear</prop>
                <prop key="create">commandCreate</prop>
                <prop key="delete">commandDelete</prop>
                <prop key="find">commandFind</prop>
                <prop key="disconnect">commandDisconnect</prop>
                <prop key="drop">commandDrop</prop>
                <prop key="help">commandHelp</prop>
                <prop key="insert">commandInsert</prop>
                <prop key="tables">commandTables</prop>
                <prop key="update">commandUpdate</prop>
                <prop key="unknown">commandUnknown</prop>
            </props>
        </property>
    </bean>

    <bean id="datasource" class="sandy.sqlcmd.controller.web.ImprovedBasicDataSource" destroy-method="close" scope="prototype">
        <constructor-arg index="0" value="${driverClassName}"/>
        <constructor-arg index="1" value="${url}"/>
        <constructor-arg index="2" value="${username}"/>
        <constructor-arg index="3" value="${password}"/>
        <!-- это свойство делает так, что выбрасывается исключение, если через секунду не появится своебодное подклчение
        а у меня оно не появляется после нескольких запросов. -->
        <property name="maxWait" value="3000"/>
    </bean>
</beans>


